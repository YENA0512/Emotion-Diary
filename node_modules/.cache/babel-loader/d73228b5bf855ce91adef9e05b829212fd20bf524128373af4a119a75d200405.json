{"ast":null,"code":"var _jsxFileName = \"/Users/yenalee/Desktop/Elice/therory/React-Practice/emotion-diary/myapp/src/components/DiaryEditor.js\",\n  _s = $RefreshSig$();\nimport MyHeader from \"./MyHeader\";\nimport MyButton from \"./MyButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useRef, useContext, useEffect } from \"react\";\nimport EmotionItem from \"./EmotionItem\";\nimport { DiaryDispatchContext } from \"../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getStringDate = date => {\n  return date.toISOString().slice(0, 10);\n};\nconst env = process.env;\nenv.PUBLIC_URL = env.PUBLIC_URL || \"\";\nconst emotionList = [{\n  emotion_id: 1,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion1.png`,\n  emotion_descript: \"행복해요\"\n}, {\n  emotion_id: 2,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion2.png`,\n  emotion_descript: \"좋아요\"\n}, {\n  emotion_id: 3,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion3.png`,\n  emotion_descript: \"고냥저냥\"\n}, {\n  emotion_id: 4,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion4.png`,\n  emotion_descript: \"속상해요\"\n}, {\n  emotion_id: 5,\n  emotion_img: process.env.PUBLIC_URL + `/assets/emotion5.png`,\n  emotion_descript: \"화가나요\"\n}];\nconst DiaryEditor = _ref => {\n  _s();\n  let {\n    isEdit,\n    originData\n  } = _ref;\n  const contentRef = useRef();\n  const [emotion, setEmotion] = useState(3);\n  const [content, setContent] = useState(\"\");\n  const [date, setDate] = useState(getStringDate(new Date()));\n  const navigate = useNavigate();\n  const {\n    onCreate,\n    onEdit\n  } = useContext(DiaryDispatchContext);\n  const handleClickEmote = emotion => {\n    setEmotion(emotion);\n  };\n  const handleSubmit = () => {\n    if (content.length < 1) {\n      contentRef.current.focus();\n      return;\n    }\n    if (window.confirm(isEdit ? \"일기를 수정하시겠습니까?\" : \"새로운 일기를 작성하시겠습니까?\")) {\n      if (!isEdit) {\n        onCreate(date, content, emotion);\n      } else {\n        onEdit(originData.id, date, content, emotion);\n      }\n    }\n    navigate(\"/\", {\n      replace: true\n    });\n  };\n  useEffect(() => {\n    if (isEdit) {\n      setDate(getStringDate(new Date(parseInt(originData.date))));\n      setEmotion(originData.emotion);\n      setContent(originData.content);\n    }\n  }, [isEdit, originData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryEditor\",\n    children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n      headText: isEdit ? \"일기 수정하기\" : \"새 일기 쓰기\",\n      leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"< 뒤로가기\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC624\\uB298\\uC740 \\uC5B8\\uC81C\\uC778\\uAC00\\uC694?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input_date\",\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box emotion_list_wrapper\",\n        children: emotionList.map(it => /*#__PURE__*/_jsxDEV(EmotionItem, {\n          ...it,\n          onClick: handleClickEmote,\n          isSelected: it.emotion_id === emotion\n        }, it.emotion_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC624\\uB298\\uC758 \\uC77C\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box text_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"\\uC624\\uB298\\uC740 \\uC5B4\\uB560\\uB098\\uC694?\",\n          ref: contentRef,\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control_box\",\n        children: [/*#__PURE__*/_jsxDEV(MyButton, {\n          text: \"취소하기\",\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          text: \"작성완료\",\n          type: \"positive\",\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(DiaryEditor, \"jM/KoK29X9o0CxulCayR4ZImu9Q=\", false, function () {\n  return [useNavigate];\n});\n_c = DiaryEditor;\nexport default DiaryEditor;\nvar _c;\n$RefreshReg$(_c, \"DiaryEditor\");","map":{"version":3,"names":["MyHeader","MyButton","useNavigate","useState","useRef","useContext","useEffect","EmotionItem","DiaryDispatchContext","getStringDate","date","toISOString","slice","env","process","PUBLIC_URL","emotionList","emotion_id","emotion_img","emotion_descript","DiaryEditor","isEdit","originData","contentRef","emotion","setEmotion","content","setContent","setDate","Date","navigate","onCreate","onEdit","handleClickEmote","handleSubmit","length","current","focus","window","confirm","id","replace","parseInt","e","target","value","map","it"],"sources":["/Users/yenalee/Desktop/Elice/therory/React-Practice/emotion-diary/myapp/src/components/DiaryEditor.js"],"sourcesContent":["import MyHeader from \"./MyHeader\";\nimport MyButton from \"./MyButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useRef, useContext, useEffect } from \"react\";\nimport EmotionItem from \"./EmotionItem\";\nimport { DiaryDispatchContext } from \"../App\";\n\nconst getStringDate = (date) => {\n  return date.toISOString().slice(0, 10);\n};\n\nconst env = process.env;\nenv.PUBLIC_URL = env.PUBLIC_URL || \"\";\n\nconst emotionList = [\n  {\n    emotion_id: 1,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion1.png`,\n    emotion_descript: \"행복해요\",\n  },\n  {\n    emotion_id: 2,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion2.png`,\n    emotion_descript: \"좋아요\",\n  },\n  {\n    emotion_id: 3,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion3.png`,\n    emotion_descript: \"고냥저냥\",\n  },\n  {\n    emotion_id: 4,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion4.png`,\n    emotion_descript: \"속상해요\",\n  },\n  {\n    emotion_id: 5,\n    emotion_img: process.env.PUBLIC_URL + `/assets/emotion5.png`,\n    emotion_descript: \"화가나요\",\n  },\n];\nconst DiaryEditor = ({ isEdit, originData }) => {\n  const contentRef = useRef();\n  const [emotion, setEmotion] = useState(3);\n  const [content, setContent] = useState(\"\");\n  const [date, setDate] = useState(getStringDate(new Date()));\n  const navigate = useNavigate();\n  const { onCreate, onEdit } = useContext(DiaryDispatchContext);\n  const handleClickEmote = (emotion) => {\n    setEmotion(emotion);\n  };\n  const handleSubmit = () => {\n    if (content.length < 1) {\n      contentRef.current.focus();\n      return;\n    }\n    if (\n      window.confirm(\n        isEdit ? \"일기를 수정하시겠습니까?\" : \"새로운 일기를 작성하시겠습니까?\"\n      )\n    ) {\n      if (!isEdit) {\n        onCreate(date, content, emotion);\n      } else {\n        onEdit(originData.id, date, content, emotion);\n      }\n    }\n\n    navigate(\"/\", { replace: true });\n  };\n\n  useEffect(() => {\n    if (isEdit) {\n      setDate(getStringDate(new Date(parseInt(originData.date))));\n      setEmotion(originData.emotion);\n      setContent(originData.content);\n    }\n  }, [isEdit, originData]);\n  return (\n    <div className=\"DiaryEditor\">\n      <MyHeader\n        headText={isEdit ? \"일기 수정하기\" : \"새 일기 쓰기\"}\n        leftChild={\n          <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\n        }\n      />\n      <section>\n        <h4>오늘은 언제인가요?</h4>\n        <div className=\"input_box\">\n          <input\n            className=\"input_date\"\n            type=\"date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n          />\n        </div>\n      </section>\n      <section>\n        <h4>오늘의 감정</h4>\n        <div className=\"input_box emotion_list_wrapper\">\n          {emotionList.map((it) => (\n            <EmotionItem\n              key={it.emotion_id}\n              {...it}\n              onClick={handleClickEmote}\n              isSelected={it.emotion_id === emotion}\n            />\n          ))}\n        </div>\n      </section>\n      <section>\n        <h4>오늘의 일기</h4>\n        <div className=\"input_box text_wrapper\">\n          <textarea\n            placeholder=\"오늘은 어땠나요?\"\n            ref={contentRef}\n            value={content}\n            onChange={(e) => setContent(e.target.value)}\n          />\n        </div>\n      </section>\n      <section>\n        <div className=\"control_box\">\n          <MyButton text={\"취소하기\"} onClick={() => navigate(-1)} />\n          <MyButton\n            text={\"작성완료\"}\n            type={\"positive\"}\n            onClick={handleSubmit}\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\nexport default DiaryEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}