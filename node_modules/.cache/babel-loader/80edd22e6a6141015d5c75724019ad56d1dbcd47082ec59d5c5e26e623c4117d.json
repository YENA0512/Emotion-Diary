{"ast":null,"code":"var _jsxFileName = \"/Users/yenalee/Desktop/Elice/therory/React-Practice/emotion-diary/myapp/src/pages/Diary.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { DiaryStateContext } from \"../App\";\nimport { getStringDate } from \"../util/date\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Diary = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n      if (targetDiary) {\n        setData(targetDiary);\n      } else {\n        alert(\"존재하지 않는 일기입니다.\");\n        navigate(\"/\", {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList, navigate]);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryPage\",\n    children: /*#__PURE__*/_jsxDEV(MyHeader, {\n      headText: `${getStringDate(new Date(data.date))} 기록`,\n      leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"< 뒤로가기\",\n        onClick: () => navigate(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this),\n      rightChild: /*#__PURE__*/_jsxDEV(MyButton, {\n        text: \"수정하기\",\n        onCLick: () => navigate(`/edit/${data.id}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Diary, \"GHqBxuwZ/RI84ZMN8TYIbTBgEas=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Diary;\nexport default Diary;\nvar _c;\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"names":["useNavigate","useParams","useContext","useEffect","useState","DiaryStateContext","getStringDate","MyHeader","MyButton","Diary","id","diaryList","navigate","data","setData","length","targetDiary","find","it","parseInt","alert","replace","Date","date"],"sources":["/Users/yenalee/Desktop/Elice/therory/React-Practice/emotion-diary/myapp/src/pages/Diary.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { DiaryStateContext } from \"../App\";\nimport { getStringDate } from \"../util/date\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nconst Diary = () => {\n  const { id } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n      if (targetDiary) {\n        setData(targetDiary);\n      } else {\n        alert(\"존재하지 않는 일기입니다.\");\n        navigate(\"/\", { replace: true });\n      }\n    }\n  }, [id, diaryList, navigate]);\n  if (!data) {\n    return <div className=\"DiaryPage\">로딩중입니다...</div>;\n  }\n  return (\n    <div className=\"DiaryPage\">\n      <MyHeader\n        headText={`${getStringDate(new Date(data.date))} 기록`}\n        leftChild={\n          <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\n        }\n        rightChild={\n          <MyButton\n            text={\"수정하기\"}\n            onCLick={() => navigate(`/edit/${data.id}`)}\n          />\n        }\n      />\n    </div>\n  );\n};\nexport default Diary;\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,SAASC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACvD,SAASC,iBAAiB,QAAQ,QAAQ;AAC1C,SAASC,aAAa,QAAQ,cAAc;AAC5C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAAC;AAC9C,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,EAAE;EAC1B,MAAMU,SAAS,GAAGT,UAAU,CAACG,iBAAiB,CAAC;EAC/C,MAAMO,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,EAAE;EAClCD,SAAS,CAAC,MAAM;IACd,IAAIQ,SAAS,CAACI,MAAM,IAAI,CAAC,EAAE;MACzB,MAAMC,WAAW,GAAGL,SAAS,CAACM,IAAI,CAC/BC,EAAE,IAAKC,QAAQ,CAACD,EAAE,CAACR,EAAE,CAAC,KAAKS,QAAQ,CAACT,EAAE,CAAC,CACzC;MACD,IAAIM,WAAW,EAAE;QACfF,OAAO,CAACE,WAAW,CAAC;MACtB,CAAC,MAAM;QACLI,KAAK,CAAC,gBAAgB,CAAC;QACvBR,QAAQ,CAAC,GAAG,EAAE;UAAES,OAAO,EAAE;QAAK,CAAC,CAAC;MAClC;IACF;EACF,CAAC,EAAE,CAACX,EAAE,EAAEC,SAAS,EAAEC,QAAQ,CAAC,CAAC;EAC7B,IAAI,CAACC,IAAI,EAAE;IACT,oBAAO;MAAK,SAAS,EAAC,WAAW;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EACnD;EACA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB,QAAC,QAAQ;MACP,QAAQ,EAAG,GAAEP,aAAa,CAAC,IAAIgB,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,CAAE,KAAK;MACrD,SAAS,eACP,QAAC,QAAQ;QAAC,IAAI,EAAE,QAAS;QAAC,OAAO,EAAE,MAAMX,QAAQ,CAAC,CAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QACvD;MACD,UAAU,eACR,QAAC,QAAQ;QACP,IAAI,EAAE,MAAO;QACb,OAAO,EAAE,MAAMA,QAAQ,CAAE,SAAQC,IAAI,CAACH,EAAG,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA;IAE/C;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GArCID,KAAK;EAAA,QACMR,SAAS,EAEPD,WAAW;AAAA;AAAA,KAHxBS,KAAK;AAsCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}