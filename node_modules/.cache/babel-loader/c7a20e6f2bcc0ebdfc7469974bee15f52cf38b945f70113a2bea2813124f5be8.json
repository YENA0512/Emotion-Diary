{"ast":null,"code":"var _jsxFileName = \"/Users/yenalee/Desktop/Elice/therory/React-Practice/emotion-diary/myapp/src/pages/Diary.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { DiaryStateContext } from \"../App\";\nimport { getStringDate } from \"../utill/date\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport { emotionList } from \"../utill/emotion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Diary = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(it => parseInt(it.id) === parseInt(id));\n      if (targetDiary) {\n        setData(targetDiary);\n      } else {\n        alert(\"존재하지 않는 일기입니다.\");\n        navigate(\"/\", {\n          replace: true\n        });\n      }\n    }\n  }, [id, diaryList, navigate]);\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: \"\\uB85C\\uB529\\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  } else {\n    const curEmotionData = emotionList.find(it => parseInt(it.emotion_id) === parseInt(data.emotion));\n    console.log(curEmotionData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DiaryPage\",\n      children: [/*#__PURE__*/_jsxDEV(MyHeader, {\n        headText: `${getStringDate(new Date(data.date))} 기록`,\n        leftChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: \"< 뒤로가기\",\n          onClick: () => navigate(-1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this),\n        rightChild: /*#__PURE__*/_jsxDEV(MyButton, {\n          text: \"수정하기\",\n          onClick: () => navigate(`/edit/${data.id}`)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC624\\uB298\\uC758 \\uAC10\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: [\"diary_img_wrapper\", `diary_img_wrapper_${data.emotion}`].join(\" \"),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: curEmotionData.emotion_img,\n              alt: curEmotionData.emotion_descript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"emotion_descript\",\n              children: curEmotionData.emotion_descript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC624\\uB298\\uC758 \\uD3C9\\uAC00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"diary_content_wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Diary, \"GHqBxuwZ/RI84ZMN8TYIbTBgEas=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Diary;\nexport default Diary;\nvar _c;\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"names":["useNavigate","useParams","useContext","useEffect","useState","DiaryStateContext","getStringDate","MyHeader","MyButton","emotionList","Diary","id","diaryList","navigate","data","setData","length","targetDiary","find","it","parseInt","alert","replace","curEmotionData","emotion_id","emotion","console","log","Date","date","join","emotion_img","emotion_descript","content"],"sources":["/Users/yenalee/Desktop/Elice/therory/React-Practice/emotion-diary/myapp/src/pages/Diary.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { DiaryStateContext } from \"../App\";\nimport { getStringDate } from \"../utill/date\";\nimport MyHeader from \"../components/MyHeader\";\nimport MyButton from \"../components/MyButton\";\nimport { emotionList } from \"../utill/emotion\";\n\nconst Diary = () => {\n  const { id } = useParams();\n  const diaryList = useContext(DiaryStateContext);\n  const navigate = useNavigate();\n  const [data, setData] = useState();\n  useEffect(() => {\n    if (diaryList.length >= 1) {\n      const targetDiary = diaryList.find(\n        (it) => parseInt(it.id) === parseInt(id)\n      );\n      if (targetDiary) {\n        setData(targetDiary);\n      } else {\n        alert(\"존재하지 않는 일기입니다.\");\n        navigate(\"/\", { replace: true });\n      }\n    }\n  }, [id, diaryList, navigate]);\n  if (!data) {\n    return <div className=\"DiaryPage\">로딩중입니다...</div>;\n  } else {\n    const curEmotionData = emotionList.find(\n      (it) => parseInt(it.emotion_id) === parseInt(data.emotion)\n    );\n    console.log(curEmotionData);\n    return (\n      <div className=\"DiaryPage\">\n        <MyHeader\n          headText={`${getStringDate(new Date(data.date))} 기록`}\n          leftChild={\n            <MyButton text={\"< 뒤로가기\"} onClick={() => navigate(-1)} />\n          }\n          rightChild={\n            <MyButton\n              text={\"수정하기\"}\n              onClick={() => navigate(`/edit/${data.id}`)}\n            />\n          }\n        />\n        <article>\n          <section>\n            <h4>오늘의 감정</h4>\n            <div\n              className={[\n                \"diary_img_wrapper\",\n                `diary_img_wrapper_${data.emotion}`,\n              ].join(\" \")}\n            >\n              <img\n                src={curEmotionData.emotion_img}\n                alt={curEmotionData.emotion_descript}\n              />\n              <div className=\"emotion_descript\">\n                {curEmotionData.emotion_descript}\n              </div>\n            </div>\n          </section>\n          <section>\n            <h4>오늘의 평가</h4>\n            <div className=\"diary_content_wrapper\">\n              <p>{data.content}</p>\n            </div>\n          </section>\n        </article>\n      </div>\n    );\n  }\n};\nexport default Diary;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}